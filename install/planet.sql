DELIMITER ;;

USE cygnus_rootnode;;

DROP PROCEDURE IF EXISTS NC_PlanetCreate;;
CREATE PROCEDURE NC_PlanetCreate(
    p_SID INTEGER UNSIGNED,
    p_type TINYINT UNSIGNED
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  DECLARE PlanetNum TINYINT UNSIGNED;
  START TRANSACTION;

  -- Prevent other PlanetCreate in this system
    SELECT 1 FROM NC_Starsystem WHERE SID=p_SID FOR UPDATE;

  SELECT COUNT(*) INTO PlanetNum FROM NC_Planet WHERE SID=p_SID;
  INSERT INTO NC_Planet(SID, Orbit, PlType) VALUES (p_SID, PlanetNum, p_type);
  COMMIT;
  SELECT LAST_INSERT_ID() AS Result;
END;;

DROP PROCEDURE IF EXISTS NC_PlanetChangeOwner;;
CREATE PROCEDURE NC_PlanetChangeOwner(
    p_PLID INTEGER UNSIGNED,
    p_PID INTEGER UNSIGNED
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  UPDATE NC_Planet SET Owner=p_PID WHERE PLID=p_PLID;
  INSERT INTO NC_PlanetData VALUES (p_PLID, 1, 1, 0) -- populationset to 1
    ON DUPLICATE KEY UPDATE Value=1, Progress=0;
END;;

DROP PROCEDURE IF EXISTS NC_PlanetSetAttribute;;
CREATE PROCEDURE NC_PlanetSetAttribute(
    p_PLID INTEGER UNSIGNED,
    p_Item SMALLINT UNSIGNED,
    p_Value INTEGER,
    p_Progress Integer
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  INSERT INTO NC_PlanetData VALUES (p_PLID, p_Item, p_Value, p_Progress)
    ON DUPLICATE KEY UPDATE Value=p_Value, Progress=p_Progress;
END;;

DROP PROCEDURE IF EXISTS NC_PlanetGetAttributes;;
CREATE PROCEDURE NC_PlanetGetAttributes(
    p_PLID INTEGER UNSIGNED
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  SELECT ItemType, Value, Progress FROM NC_PlanetData
  WHERE PLID=p_PLID;
END;;
