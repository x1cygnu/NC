DELIMITER ;;

USE cygnus_rootnode;;

DROP PROCEDURE IF EXISTS NC_PlanetCreate;;
CREATE PROCEDURE NC_PlanetCreate(
    p_SID INTEGER UNSIGNED,
    p_type TINYINT UNSIGNED
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  DECLARE PlanetNum TINYINT UNSIGNED;
  START TRANSACTION;

  -- Prevent other PlanetCreate in this system
    SELECT 1 FROM NC_Starsystem WHERE SID=p_SID FOR UPDATE;

  SELECT COUNT(*) INTO PlanetNum FROM NC_Planet WHERE SID=p_SID;
  INSERT INTO NC_Planet(SID, Orbit, PlType) VALUES (p_SID, PlanetNum, p_type);
  COMMIT;
  SELECT LAST_INSERT_ID() AS Result;
END;;

DROP PROCEDURE IF EXISTS NC_PlanetChangeOwner;;
CREATE PROCEDURE NC_PlanetChangeOwner(
    p_PLID INTEGER UNSIGNED,
    p_PID INTEGER UNSIGNED
  )
  LANGUAGE SQL
  MODIFIES SQL DATA
  SQL SECURITY INVOKER
BEGIN
  UPDATE NC_Planet SET Owner=p_PID, Pop=1 WHERE PLID=p_PLID;
END;;


DROP PROCEDURE IF EXISTS NC_PlanetGetOwner;;
CREATE PROCEDURE NC_PlanetGetOwner(
    p_PLID INTEGER UNSIGNED
  )
  LANGUAGE SQL
  READS SQL DATA
  SQL SECURITY INVOKER
BEGIN
  SELECT Owner AS Result
  FROM NC_Planet
  WHERE PLID=p_PLID;
END;;


DROP PROCEDURE IF EXISTS NC_PlanetGet;;
CREATE PROCEDURE NC_PlanetGet(
    p_PLID INTEGER UNSIGNED
  )
  LANGUAGE SQL
  READS SQL DATA
  SQL SECURITY INVOKER
BEGIN
  SELECT
    S.Name AS Name,
    P.Orbit AS Orbit,
    P.Pop AS Pop
  FROM
    NC_Planet P
    NATURAL JOIN NC_Starsystem S
  WHERE
    P.PLID = p_PLID;
END;;

